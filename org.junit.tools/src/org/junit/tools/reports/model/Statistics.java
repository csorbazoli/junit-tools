//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.23 at 09:36:22 AM CET 
//


package org.junit.tools.reports.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Statistics complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Statistics">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="necessaryTestClassesCounter" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="availableTestClassesCounter" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="necessaryTestMethodsCounter" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="availableTestMethodsCounter" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="classCoverage" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *         &lt;element name="methodCoverage" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *         &lt;element name="newMethodsCounter" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Statistics", propOrder = {
    "necessaryTestClassesCounter",
    "availableTestClassesCounter",
    "necessaryTestMethodsCounter",
    "availableTestMethodsCounter",
    "classCoverage",
    "methodCoverage",
    "newMethodsCounter"
})
public class Statistics {

    protected int necessaryTestClassesCounter;
    protected int availableTestClassesCounter;
    protected int necessaryTestMethodsCounter;
    protected int availableTestMethodsCounter;
    protected double classCoverage;
    protected double methodCoverage;
    protected int newMethodsCounter;

    /**
     * Gets the value of the necessaryTestClassesCounter property.
     * 
     */
    public int getNecessaryTestClassesCounter() {
        return necessaryTestClassesCounter;
    }

    /**
     * Sets the value of the necessaryTestClassesCounter property.
     * 
     */
    public void setNecessaryTestClassesCounter(int value) {
        this.necessaryTestClassesCounter = value;
    }

    /**
     * Gets the value of the availableTestClassesCounter property.
     * 
     */
    public int getAvailableTestClassesCounter() {
        return availableTestClassesCounter;
    }

    /**
     * Sets the value of the availableTestClassesCounter property.
     * 
     */
    public void setAvailableTestClassesCounter(int value) {
        this.availableTestClassesCounter = value;
    }

    /**
     * Gets the value of the necessaryTestMethodsCounter property.
     * 
     */
    public int getNecessaryTestMethodsCounter() {
        return necessaryTestMethodsCounter;
    }

    /**
     * Sets the value of the necessaryTestMethodsCounter property.
     * 
     */
    public void setNecessaryTestMethodsCounter(int value) {
        this.necessaryTestMethodsCounter = value;
    }

    /**
     * Gets the value of the availableTestMethodsCounter property.
     * 
     */
    public int getAvailableTestMethodsCounter() {
        return availableTestMethodsCounter;
    }

    /**
     * Sets the value of the availableTestMethodsCounter property.
     * 
     */
    public void setAvailableTestMethodsCounter(int value) {
        this.availableTestMethodsCounter = value;
    }

    /**
     * Gets the value of the classCoverage property.
     * 
     */
    public double getClassCoverage() {
        return classCoverage;
    }

    /**
     * Sets the value of the classCoverage property.
     * 
     */
    public void setClassCoverage(double value) {
        this.classCoverage = value;
    }

    /**
     * Gets the value of the methodCoverage property.
     * 
     */
    public double getMethodCoverage() {
        return methodCoverage;
    }

    /**
     * Sets the value of the methodCoverage property.
     * 
     */
    public void setMethodCoverage(double value) {
        this.methodCoverage = value;
    }

    /**
     * Gets the value of the newMethodsCounter property.
     * 
     */
    public int getNewMethodsCounter() {
        return newMethodsCounter;
    }

    /**
     * Sets the value of the newMethodsCounter property.
     * 
     */
    public void setNewMethodsCounter(int value) {
        this.newMethodsCounter = value;
    }

}
